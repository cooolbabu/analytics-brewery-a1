// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url = "file:./file.db"
  
}

// User profile schema. At the moment, we are using tokensAvailable and currentTokenCount to keep track of the user's token balance.
// tokensAvailable is for the future. It will be a json object that will have (vendor, LLMmodel, dateadded, no_of_tokens)
// tokensAvailability format: [{vendor: vendor_name,
                                // models: [ {LLMmodel: model_name,
                                //           tokens_available: no_of_tokens, // not used for now
                                //           tokens_used : no_of_tokens}
                                //           ]
                                // }]
// tokensAddedHistory format: {{vendor: vendor_name,
                                // models: [ {LLMmodel: model_name,
                                //           date_added: datetime,
                                //           tokens_added : no_of_tokens}
                                //           ]
                                // }}

model UserProfile{
  id       String   @id @default(uuid())
  emailId           String  @unique
  firstName         String
  lastName          String
  dateRegistered   DateTime @default(now())
  currentTokenCount Int
  tokensAvailable   Int
  tokensAvailabilty String
  tokensAddedHistory     String
}

model  userProfileRequests{
  id       String   @id @default(uuid())
  emailId           String
  requestType       String
  requestDate       DateTime
  requestStatus     String
  requestDetails    String
  requestResponse   String
  requestResponseDate DateTime
  requestResponseBy String
  requestResponseDetails String
  requestResponseStatus String
}

model tokenUsuageAcrossProfiles {
  id       String   @id @default(uuid())
  emailId String
  modelId String
  dateUsed DateTime
  tokensForRequest Int
  tokensForResponse Int
  promptString String
  response BigInt
  destination String
}

model VendorModels {
  vendor String @id
  models String
}



